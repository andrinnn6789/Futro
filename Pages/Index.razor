@page "/"
@using System.Runtime.CompilerServices
@using Futro.Classes
@using Futro.Enums

@inject RegistrationStateService RegistrationState
@inject NavigationManager NavigationManager

<style>
    .table-container {
        max-width: 100%; /* Änderung: Maximale Breite auf 100% setzen */
        margin: 0; /* Änderung: Margin auf 0 setzen */
        padding: 0; /* Änderung: Padding auf 0 setzen */
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table thead {
        background-color: #f5f5f5;
    }

    .table th, .table td {
        padding: 10px;
        text-align: left;
    }

    .table th {
        font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .table tbody tr:hover {
        background-color: #e0e0e0;
    }

    .actions {
        display: flex;
        gap: 10px;
    }

    button {
        padding: 5px 10px;
        border: none;
        cursor: pointer;
        background-color: #007bff;
        color: #fff;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    button:hover {
        background-color: #0056b3;
    }
</style>

<div class="filter-container">
    <input type="text" @bind="filterText" placeholder="Filter">
    <button @onclick="FilterData">Filter</button>
</div>

<div class="table-container">
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Vorname</th>
            <th>Nachname</th>
            <th>Camp</th>
            <th>Aktionen</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var registration in _registrationList.Where(r => r.Participant.FirstName.Contains(filterText, StringComparison.OrdinalIgnoreCase) || r.Participant.LastName.Contains(filterText, StringComparison.OrdinalIgnoreCase) || r.Representative.Camp.Contains(filterText, StringComparison.OrdinalIgnoreCase)))
            {
                <tr>
                    <td>@registration.Participant.Id</td>
                    <td>@registration.Participant.FirstName</td>
                    <td>@registration.Participant.LastName</td>
                    <td>@registration.Representative.Camp</td>
                    <td>
                        <div class="actions">
                            <button class="btn edit" @onclick="() => ViewDetails(registration)">
                                <span class="icon">✏️</span> Bearbeiten
                            </button>
                            <button class="btn delete" @onclick="() => DeleteUser(registration)">
                                <span class="icon">🗑️</span> Löschen
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    List<Registration> _registrationList = new List<Registration>();

    string filterText = "";

    protected override Task OnInitializedAsync()
    {
        return LoadUsers();
    }

    private Task LoadUsers()
    {
        _registrationList = new List<Registration>()
        {
            new()
{
    Participant = new Participant()
    {
        FirstName = "Eva",
        LastName = "Johnson",
        Gender = Gender.Female,
        Birthdate = new DateTime(2011, 8, 5),
        Club = "Green Eagles",
        Height = "1.35",
        Id = 3,
        PlaysInClub = true,
        TShirtSize = ShirtSize.Size128
    },
    Representative = new Representative()
    {
        FirstName = "Mike",
        LastName = "Johnson",
        Gender = Gender.Male,
        Address = new Address()
        {
            Street = "789 Oak Ln",
            City = "Meadowville",
            PostalCode = "34567"
        },
        Camp = "Adventure Seekers Camp",
        Email = "mike.johnson@email.com",
        Id = 3,
        PhoneNumber = "555-9876",
        Profession = new List<string> { "Explorer" }
    }
},
new()
{
    Participant = new Participant()
    {
        FirstName = "Sophie",
        LastName = "Brown",
        Gender = Gender.Female,
        Birthdate = new DateTime(2010, 3, 18),
        Club = "Yellow Tigers",
        Height = "1.38",
        Id = 4,
        PlaysInClub = true,
        TShirtSize = ShirtSize.Size140
    },
    Representative = new Representative()
    {
        FirstName = "David",
        LastName = "Brown",
        Gender = Gender.Male,
        Address = new Address()
        {
            Street = "567 Pine Blvd",
            City = "Woodland",
            PostalCode = "45678"
        },
        Camp = "Art and Creativity Camp",
        Email = "david.brown@email.com",
        Id = 4,
        PhoneNumber = "555-4321",
        Profession = new List<string> { "Artist" }
    }
},
new()
{
    Participant = new Participant()
    {
        FirstName = "Olivia",
        LastName = "Davis",
        Gender = Gender.Female,
        Birthdate = new DateTime(2008, 6, 10),
        Club = "Purple Panthers",
        Height = "1.52",
        Id = 5,
        PlaysInClub = true,
        TShirtSize = ShirtSize.Size164
    },
    Representative = new Representative()
    {
        FirstName = "Chris",
        LastName = "Davis",
        Gender = Gender.Male,
        Address = new Address()
        {
            Street = "890 Cedar Rd",
            City = "Hilltop",
            PostalCode = "56789"
        },
        Camp = "Science Enthusiasts Camp",
        Email = "chris.davis@email.com",
        Id = 5,
        PhoneNumber = "555-8765",
        Profession = new List<string> { "Scientist" }
    }
},
new()
{
    Participant = new Participant()
    {
        FirstName = "Emma",
        LastName = "Miller",
        Gender = Gender.Female,
        Birthdate = new DateTime(2009, 11, 25),
        Club = "Orange Owls",
        Height = "1.42",
        Id = 6,
        PlaysInClub = true,
        TShirtSize = ShirtSize.Size146
    },
    Representative = new Representative()
    {
        FirstName = "Mark",
        LastName = "Miller",
        Gender = Gender.Male,
        Address = new Address()
        {
            Street = "901 Walnut St",
            City = "Riverside",
            PostalCode = "67890"
        },
        Camp = "Music Lovers Camp",
        Email = "mark.miller@email.com",
        Id = 6,
        PhoneNumber = "555-2345",
        Profession = new List<string> { "Musician" }
    }
},

        };
        return Task.CompletedTask;
    }

    private void ViewDetails(Registration registration)
    {
        RegistrationState.SetCurrentRegistration(registration);
        NavigationManager.NavigateTo("/participant-details");
    }

    private void DeleteUser(Registration registration)
    {
        _registrationList.Remove(registration);
        StateHasChanged();
    }

    private void FilterData()
    {
        StateHasChanged();
    }
}
