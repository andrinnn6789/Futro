@page "/"
@using System.Runtime.CompilerServices
@using Futro.Classes
@using Futro.Enums

@inject RegistrationStateService RegistrationState
@inject NavigationManager NavigationManager

<style>
    .table-container {
        max-width: 100%; /* Änderung: Maximale Breite auf 100% setzen */
        margin: 0; /* Änderung: Margin auf 0 setzen */
        padding: 0; /* Änderung: Padding auf 0 setzen */
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .table thead {
        background-color: #f5f5f5;
    }

    .table th, .table td {
        padding: 10px;
        text-align: left;
    }

    .table th {
        font-weight: bold;
    }

    .table tbody tr:nth-child(even) {
        background-color: #f2f2f2;
    }

    .table tbody tr:hover {
        background-color: #e0e0e0;
    }

    .actions {
        display: flex;
        gap: 10px;
    }

    button {
        padding: 5px 10px;
        border: none;
        cursor: pointer;
        background-color: #007bff;
        color: #fff;
        border-radius: 5px;
        transition: background-color 0.3s;
    }

    button:hover {
        background-color: #0056b3;
    }
</style>

<div class="table-container">
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Vorname</th>
            <th>Nachname</th>
            <th>Camp</th>
            <th>Aktionen</th>
        </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Participant.Id</td>
                    <td>@item.Participant.FirstName</td>
                    <td>@item.Participant.LastName</td>
                    <td>@item.Representative.Camp</td>
                    <td>
                        <div class="actions">
                            <button class="btn edit" @onclick="() => ViewDetails(item)">
                                <span class="icon">✏️</span> Bearbeiten
                            </button>
                            <button class="btn delete" @onclick="() => DeleteUser(item)">
                                <span class="icon">🗑️</span> Löschen
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>



@code {

    List<Registration> items = new List<Registration>()
    {
        // Registration 1
        new Registration()
        {
            Participant = new Participant()
            {
                FirstName = "Alice",
                LastName = "Smith",
                Gender = Gender.Female,
                Birthdate = new DateTime(2010, 1, 15),
                Club = "Red Hawks",
                Height = "1.40",
                Id = 1,
                PlaysInClub = true,
                TShirtSize = ShirtSize.Size140
            },
            Representative = new Representative()
            {
                FirstName = "John",
                LastName = "Smith",
                Gender = Gender.Male,
                Address = new Address()
                {
                    Street = "123 Elm St",
                    City = "Springfield",
                    PostalCode = "12345"
                },
                Camp = "Summer Sports Camp",
                Email = "john.smith@email.com",
                Id = 1,
                PhoneNumber = "555-1234",
                Profession = new List<string> { "Teacher" }
            }
        },
        // Registration 2
        new Registration()
        {
            Participant = new Participant()
            {
                FirstName = "Max",
                LastName = "Jones",
                Gender = Gender.Male,
                Birthdate = new DateTime(2009, 4, 22),
                Club = "Blue Warriors",
                Height = "1.45",
                Id = 2,
                PlaysInClub = true,
                TShirtSize = ShirtSize.Size152
            },
            Representative = new Representative()
            {
                FirstName = "Linda",
                LastName = "Jones",
                Gender = Gender.Female,
                Address = new Address()
                {
                    Street = "456 Maple Ave",
                    City = "Greenwood",
                    PostalCode = "23456"
                },
                Camp = "Nature Explorers Camp",
                Email = "linda.jones@email.com",
                Id = 2,
                PhoneNumber = "555-5678",
                Profession = new List<string> { "Engineer" }
            }
        },
    };


    protected override Task OnInitializedAsync()
    {
        return LoadUsers();
    }

    private async Task LoadUsers()
    {
        // Laden Sie die Benutzer von einem Service oder einer API
        // Beispiel:
        // registration = await userService.GetUsersAsync();
    }

    private void ViewDetails(Registration registration)
    {
        RegistrationState.SetCurrentRegistration(registration);
        NavigationManager.NavigateTo("/participant-details");
    }

    private void DeleteUser(Registration registration)
    {
    // Implementieren Sie die Löschlogik für den Teilnehmer
    }
}